// This file should be included *after* bootstrap's _mixins.scss
// and *before* any bootstrap component to replace mixins that use
// plain media-queries with media-queries based on the respond-min
// and respond-max mixins from SASS-ie.
//
// This is an easy approach to make bootstrap compatible with the
// SASS-ie technique.
//
// Important: This file only redefines the most widely used mixins
// from bootstrap and therefore doesn't replace all media-queries
// used in bootstrap components.

// -- SASS-ie mixins -- //

// For more information see: http://jakearchibald.github.io/sass-ie/
@mixin respond-min($width) {
	@if $fix-mqs {
		@if $fix-mqs >= $width {
			@content;
		}
	}
	@else {
		@media screen and (min-width: $width) {
			@content;
		}
	}
}

@mixin respond-max($width) {
	@if $fix-mqs {
		@if $fix-mqs <= $width {
			@content;
		}
	}
	@else {
		@media screen and (max-width: $width) {
			@content;
		}
	}
}

@mixin old-ie {
	@if $old-ie {
		@content;
	}
}

// -- the default bootstrap make-grid-colums mixin, just slightly adopted to serve the .col-xxs- feature -- //

@mixin make-grid-columns-extended-by-xxs($i: 1, $list: ".col-xxs-#{$i}, .col-xs-#{$i}, .col-sm-#{$i}, .col-md-#{$i}, .col-lg-#{$i}") {
	@for $i from (1 + 1) through $grid-columns {
		$list: "#{$list}, .col-xxs-#{$i}, .col-xs-#{$i}, .col-sm-#{$i}, .col-md-#{$i}, .col-lg-#{$i}";
	}
	#{$list} {
		position: relative;
		// Prevent columns from collapsing when empty
		min-height: 1px;
		// Inner gutter via padding
		padding-left:  ($grid-gutter-width / 2);
		padding-right: ($grid-gutter-width / 2);
	}
}