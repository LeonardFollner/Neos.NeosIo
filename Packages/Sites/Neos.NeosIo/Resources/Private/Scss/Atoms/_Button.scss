/**
 * Base Button:
 * `.btn` - The base class for all buttons.
 * Button styles can be applied to any element. Typically you'll want to use
 * either a `<button>` or an `<a>` element:
 *
 *     @example
 *     a.btn My Button
 */
@mixin btn() {
	display: inline-block;

	// Set in em's so we can change the size of the button depending on the font-size.
	padding: 1.3em 1.5em;
	border: none;
	cursor: pointer;
	position: relative;

	// Normalize some rules across the targeted elements (<input>, <button> and the .btn class).
	font-weight: $regular;
	line-height: 1;
	color: currentColor;
	vertical-align: top;
	transition: all $transition-duration ease;
	text-align: center;
	background: 0;

	& + & {
		margin-left: 1em;
	}

	&,
	&:hover,
	&:active,
	&:focus {
		text-decoration: none;
	}

	&:active,
	&:focus {
		transform: translateY(3px);
	}

	//
	// Edge case for the neos backend.
	//
	a { color: currentColor; }
}
.btn {
	@include btn();
}

@mixin btnSvgBorder($strokeColor, $fillColor) {
	svg {
		position: absolute;
		top: 0;
		height: 100%;

		polyline {
			fill: $fillColor;
			stroke: $strokeColor;
			stroke-width: 1px;
		}
	}

	svg.leftBorder { left: -13px; }
	svg.rightBorder { right: -13px; }
}

/*
 * A basic :hover effect for all solid buttons.
 */
@mixin solidBtnHoverPulse() {
	position: relative;

	&:before {
		content: '';
		position: absolute;
		top: 0;
		left: 50%;
		width: 60%;
		height: 100%;
		transform: translateX(-50%);
		background: rgba(#FFF, .15);
		opacity: 0;
	}
	&:hover:before {
		opacity: 1;
		width: 101%;
	}

	//
	// Disable the :hover effect while viewing the site in the neos backend since it creates
	// an overlaying div which would prevent the inline editing of the label.
	//
	.neos-backend &:before {
		display: none;
	}
}

/**
 * Full-Width Button:
 * `.btn--full` - Set the button width to the width of it's parent element.
 *
 *     @example
 *     a.btn.btn--full My Button
 */
@mixin btn--full() {
	display: block;
	text-align: center;

	// The following is so that this class works properly on inputs as well as anchor tags.
	padding-right: 0;
	padding-left: 0;
	width: 100%;
}
.btn--full {
	@include btn--full();
}

/**
 * Bordered Primary Button:
 * `.btn--primary` - Sets the button to a bordered button which is themed after the primary brand color.
 *
 *     @example
 *     a.btn.btn--primary My Button
 */
@mixin btn--primary() {
	color: brand('primary');
	box-shadow: 0 0 8px rgba(brand('primary'), 0.15);

	&:hover {
		$hoverColor: lighten(brand('primary'), 5%);

		color: $hoverColor;
		box-shadow: 0 0 8px rgba($hoverColor, 0.3);
	}
}
.btn--primary {
	@include btn--primary();
	svg {
		display: none;
	}
}

/**
 * Solid Primary Button:
 * `.btn--solidPrimary` - Sets the button to a solid button which is themed after the primary brand color.
 *
 *     @example
 *     a.btn.btn--solidPrimary My Button
 */
@mixin btn--solidPrimary() {
	background: brand('primary');
	border-color: brand('primary');
	color: #FFF;

	@include solidBtnHoverPulse();
}
.btn--solidPrimary {
	@include btn--solidPrimary();
	@include btnSvgBorder(brand('primary'), brand('primary'));
}

/**
 * Bordered Secondary Button:
 * `.btn--secondary` - Sets the button to a bordered button which is themed after the secondary brand color.
 *
 *     @example
 *     a.btn.btn--secondary My Button
 */
@mixin btn--secondary() {
	color: brand('secondary');
	box-shadow: 0 0 8px rgba(brand('secondary'), 0.15);
	border: 1px solid currentColor;

	&:hover {
		$hoverColor: lighten(brand('secondary'), 5%);

		color: $hoverColor;
		box-shadow: 0 0 8px rgba($hoverColor, 0.5);
	}
}
.btn--secondary {
	@include btn--secondary();
	svg {
		display: none;
	}
}

/**
 * Solid Secondary Button:
 * `.btn--solidSecondary` - Sets the button to a solid button which is themed after the secondary brand color.
 *
 *     @example
 *     a.btn.btn--solidSecondary My Button
 */
@mixin btn--solidSecondary() {
	background: brand('secondary');
	border-color: brand('secondary');
	color: #FFF;

	@include solidBtnHoverPulse();
}
.btn--solidSecondary {
	@include btn--solidSecondary();
	@include btnSvgBorder(brand('secondary'), brand('secondary'));
}

/**
 * Bordered Bright Button:
 * `.btn--bright` - Sets the button to a bordered button which is themed in white.
 *
 *     @example
 *     <div style="background:#000;">
 *       <a class="btn btn--bright">My Button</a>
 *     </div>
 */
@mixin btn--bright() {
	color: #FFF;
	border: 1px solid currentColor;

	svg {
		display: none;
	}

	&:hover {
		opacity: .8;
	}
}
.btn--bright {
	@include btn--bright();
}

/**
 * Solid Bright Button:
 * `.btn--solidBright` - Sets the button to a solid button which is themed in white.
 *
 *     @example
 *     <div style="background:#000;">
 *       <a class="btn btn--solidBright">My Button</a>
 *     </div>
 */
@mixin btn--solidBright() {
	background: #FFF;
	border-color: #FFF;
	color: currentColor;

	&:hover {
		opacity: .8;
	}
}
.btn--solidBright {
	@include btn--solidBright();
}
