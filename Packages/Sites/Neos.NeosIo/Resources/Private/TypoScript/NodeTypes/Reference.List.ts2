prototype(Neos.NeosIo:Reference.List) < prototype(TYPO3.Neos:Content) {
	referenceType = ${request.arguments.referenceType}
	@context.referenceType = ${this.referenceType}
	searchTerm = ${request.arguments.search}
	@context.searchTerm = ${this.searchTerm}
	order = ${request.arguments.order}
	@context.order = ${this.order}
	limit = ${request.arguments.limit}
	@context.limit = ${this.limit}

	referenceTypes = ${q(site).find('[instanceof Neos.NeosIo:ReferenceType]').sort('title', 'ASC').get()}

	references = TYPO3.TypoScript:Collection {
		filterQuery = ${Search.query(site).nodeType('Neos.NeosIo:Reference')}
		filterQuery.@process.fulltext = ${String.isBlank(searchTerm) ? value : value.fulltext(searchTerm + '*')}
		filterQuery.@process.referenceType = ${String.isBlank(referenceType) ? value : value.exactMatch('projectType', referenceType)}
		filterQuery.@process.sort = ${String.isBlank(sort) ? value.sortDesc('datePublished') : value.sortDesc(sort)}
		filterQuery.@process.limit = ${String.isBlank(limit) ? value.limit(20) : value.limit(limit)}

		collection = ${this.filterQuery.execute()}
		itemName = 'node'
		itemRenderer = Neos.NeosIo:Reference.List.Item
	}

	attributes {
		class = TYPO3.TypoScript:RawArray {
			list = 'references__list'
			grid = 'g'
			@process.nodeType >
		}
	}

	@cache {
		mode = 'uncached'
			context {
			1 = 'site'
			2 = 'node'
			3 = 'documentNode'
		}
	}
}

prototype(Neos.NeosIo:Reference.List.Item) < prototype(TYPO3.TypoScript:Template) {
	templatePath = 'resource://Neos.NeosIo/Private/Templates/NodeTypes/Reference.List.Item.html'
	title = ${q(node).property('title')}
	image = ${q(node).property('image')}
	url = ${q(node).property('url')}
	datePublished = ${q(node).property('datePublished')}
	launchDate = ${q(node).property('launchDate')}
	projectVolume = ${q(node).property('projectVolume')} {
		@process {
			isKnown = ${value > 1 ? value : false}
		}
	}
	projectType = ${q(q(node).property('projectType')).property('title')}
}
