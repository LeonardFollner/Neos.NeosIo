prototype(Neos.NodeTypes:Image) {
    partialRootPath = 'resource://Neos.NeosIo/Private/Templates/NodeTypes/Partials'

    title.@process.filenameFallback = ${String.isBlank(value) ? q(node).property('image').label : value}

    alternativeText = ${q(node).property('alternativeText')}
    alternativeText {
        @process.titleFallback = ${String.isBlank(value) ? q(node).property('title') : value}
        @process.filenameFallback = ${String.isBlank(value) ? q(node).property('image').label : value}
    }

    imageClassName {
        @process.addImageStyle = ${value + ' ' + q(node).property('imageStyle')}
        @process.addImageStyle.@if.isSet = ${!String.isBlank(q(node).property('imageStyle'))}
    }

    maximumHeight = null
    // The maximum page width 1096 * 2
    maximumWidth = 2192

    maximumHeight.@process.override = ${q(node).property('customHeight') || value}
    maximumWidth.@process.override = ${q(node).property('customHeight') ? null : value}

    link.@process.convertUris {
        absolute = true
    }

    @context {
        image = ${this.image}
        title = ${this.title}
        alternativeText = ${this.alternativeText}
        imageClassName = ${this.imageClassName}
        maximumHeight = ${this.maximumHeight}
        maximumWidth = ${this.maximumWidth}
        allowUpScaling = ${this.allowUpScaling}
        allowCropping = ${this.allowCropping}
    }

    imageTag = Neos.NeosIo:Component.LazyLoadImage {
        image = ${image}
        title = ${title}
        alternativeText = ${alternativeText}
        className = ${imageClassName}
        maximumHeight = ${maximumHeight}
        maximumWidth = ${maximumWidth}
        allowUpScaling = ${allowUpScaling}
        allowCropping = ${allowCropping}
    }
}
